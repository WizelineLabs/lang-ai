generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model questions {
  id             BigInt           @id @default(autoincrement())
  text           String
  type           String
  weigh          Decimal          @db.Decimal
  userTestAnswer userTestAnswer[]
}

model test {
  id       BigInt     @id(map: "Tests_pkey") @default(autoincrement())
  name     String
  userTest userTest[]
}

model User {
  id        BigInt     @id(map: "users_pkey") @default(autoincrement())
  firstName String     @db.VarChar
  lastName  String     @db.VarChar
  gender    String     @db.VarChar
  email     String[]   @db.Char
  password  String[]   @db.Char
  userTest  userTest[]
}

model userTest {
  id             BigInt           @id @default(autoincrement())
  user_id        BigInt           @default(autoincrement())
  test_id        BigInt           @default(autoincrement())
  submitted      Boolean
  score          Decimal          @db.Decimal
  test           test             @relation(fields: [test_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "test_id")
  user           User             @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_id")
  userTestAnswer userTestAnswer[]
}

model userTestAnswer {
  id          BigInt    @id @default(autoincrement())
  question_id BigInt    @default(autoincrement())
  userTest_id BigInt    @default(autoincrement())
  answer      String    @db.VarChar
  date        DateTime  @db.Date
  evaluation  Decimal   @db.Decimal
  questions   questions @relation(fields: [question_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "question_id")
  userTest    userTest  @relation(fields: [userTest_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "userTest_id")
}
